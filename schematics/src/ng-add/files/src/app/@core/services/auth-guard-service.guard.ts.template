import { Injectable } from '@angular/core';
import {
  CanActivate,
  ActivatedRouteSnapshot,
  RouterStateSnapshot,
  UrlTree,
  Router
} from '@angular/router';
<% if(i18n) { %>import { TranslateService } from '@ngx-translate/core';<% } %>
import { ToastService } from 'ng-devui';
import { Observable } from 'rxjs';
import { AuthService } from './auth.service';

@Injectable()
export class AuthGuardService implements CanActivate {
  <% if(i18n) { %>i18nValues: any;<% } %>

  constructor(
    private router: Router,
    private authService: AuthService,
    private toastService: ToastService,
    <% if(i18n) { %>private translate: TranslateService<% } %>
  ) {}

  canActivate(
    route: ActivatedRouteSnapshot,
    state: RouterStateSnapshot
  ):
    | Observable<boolean | UrlTree>
    | Promise<boolean | UrlTree>
    | boolean
    | UrlTree {
    if (!this.authService.isUserLoggedIn()) {
      <% if(i18n) { %>this.i18nValues = this.translate.instant('authNotice');<% } %>
      this.toastService.open({
        value: [
          {
            severity: 'info',
            summary: <% if (i18n) { %>this.i18nValues['summary']<% } else { if(defaultLanguage === 'zh-cn') { %>'提示'<% } else { %>'Info'<% } } %>,
            content: <% if (i18n) { %>this.i18nValues['content']<% } else { if(defaultLanguage === 'zh-cn') { %>'请先进行登录!'<% } else { %>'Please login first!'<% } } %>
          }
        ],
        life: 2000,
      });
      this.router.navigate(['login']);
      return false;
    } else {
      return true;
    }
  }
}
